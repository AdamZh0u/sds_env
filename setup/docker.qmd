
## Docker

::: {.callout-tip}
## Copy Code to Clipboard 

Whenever you see a code block (like the one in the next section), you will _also_ see a 'clipboard' icon (![Copy to Clipboard Icon](../img/copy-to-clipboard.png){height="18px"}) to the right. If you click on that, the code will be copied to your computer's 'clipboard' so that you can then paste it into the Terminal. That will save you have to laboriously type the commands, which usually leads to errors. 

**On Windows** (especially if you are using a non-Latin alphabet) sometimes the `\` are incorrectly copied and become other characters (e.g. a &#165;!). In that case you need to run everything on one line. For the key commands we've provided a one-line version as well to make your life... easier.

:::

You must start the Docker app running before any of the commands below will work. You'll know that you've succeeded when you see the 'Docker Desktop' window appear listing downloaded images and running containers.

#### Setting Up Docker

::: {.callout-warning}
## Windows 

You should follow [this Microsoft guide](https://learn.microsoft.com/en-us/windows/wsl/tutorials/wsl-containers#install-docker-desktop) to ensure that `Use the WSL 2 based engine` is checked. This may require restarting Docker.
:::

To test if Docker is installed correctly, try running this command in the Shell/Terminal:

::: {.panel-tabset}

## Intel Macs and Windows

If your Apple computer has an Intel chipset (see: &#63743; -> `About this Mac` -> `Processor`) or is running Windows:

```bash
docker pull {{< var env.image >}}
```

## M1/M2 Silicon Macs

If your Apple computer has an M1 or M2 'Silicon' chipset (see: &#63743; -> `About this Mac` -> `Processor`): 

```bash
docker pull {{< var env.image >}}-silicon
```

:::

You should see a lot of 'layers' being copied down -- about 10GB worth -- so don't do this over a cellular connection! If that doesn't work, then please move to the [next section](#deep-dive-into-setting-up-docker) for more support. 

#### Starting Docker

::: {.panel-tabset}

## For Intel Macs

Once the `pull` process completes you'll need to copy+paste the following into the Shell/Terminal as the *bare minimum* for getting up and running:

```bash
docker run --rm -d --name {{< var env.name >}} -p 8888:8888 \
   -v "$(pwd):/home/jovyan/work" \
  {{< var env.image >}} start.sh jupyter lab \
  --LabApp.password='' --ServerApp.password='' --NotebookApp.token=''
```

## For M1/M2 Macs

Once the `pull` process completes you'll need to copy+paste the following into the Shell/Terminal as the *bare minimum* for getting up and running:

```bash
docker run --rm -d --name {{< var env.name >}} -p 8888:8888 \
   -v "$(pwd):/home/jovyan/work" \
  {{< var env.image >}}-silicon start.sh jupyter lab \
  --LabApp.password='' --ServerApp.password='' --NotebookApp.token=''
```

## For Windows

Once the `pull` process completes you'll need to copy+paste the following into the Shell/Terminal. Note that this is the one-line version for Windows users:

```bash
docker run --rm -d --name {{< var env.name >}} -p 8888:8888 -v "$(pwd):/home/jovyan/work" {{< var env.image >}} start.sh jupyter lab --LabApp.password='' --ServerApp.password='' --NotebookApp.token=''
```

::: {.callout-warning}
## Non-Latin Characters in Paths

Many applications assume that the user's home directory (where your user stores files) has a name that contains only plain-Latin characters (so no Chinese, or even French sometimes!). This can cause the `$(pwd)` part of the command above to fail. You will see some kind of error about the docker command failing and something about the path being unreadable. Fret not! You also have a Latin 'alias' to that directory which you can usually find using the PowerShell; it will be something *like* `C:\Users\a1509\` in which case just replace the `$(pwd)` with this and you *should* be good to go.

:::

:::

If you have issues at this point, in you'll need to look on the [**Using Docker**](../docker/index.qmd#installing) page for help. However, if you're one of the lucky ones then you should now be able to connect to the virtual machine by pointing your browser at: [localhost:8888](http://localhost:8888/lab/). If _this_ has worked as well, then you should see something like this:

![Jupyter Lab Success](../img/Jupyter_Lab.png){height="350px"}

