## Dealing with Errors

Before we go any further, there are two types of problems that you're likely to encounter when trying to use Docker:

1. Errors *installing* Docker
2. Errors *running* Docker

### Errors Installing Docker

Most installation errors arise from *either* your Windows machine not having WSL2 installed *or* not having enough disk space. An additional problem arises if you are using a 'corporate' laptop that has been locked down by your IT department and can't install Docker because you're not an administrator.

#### Problems with WSL2

If you are unable to finish installing Docker because it is asking you to install WSL2, or telling you that WSL2 is not up-to-date but failing to update it for you, then you *may* wish to try using Hyper-V instead. This is not recommended but it is a workaround that has worked for some people.

Microsoft [has instructions here](https://docs.microsoft.com/en-us/virtualization/hyper-v-on-windows/quick-start/enable-hyper-v) on how to enable Hyper-V on your Windows machine. You will need to restart your computer after enabling Hyper-V. [These instructions](https://techcommunity.microsoft.com/t5/educator-developer-blog/step-by-step-enabling-hyper-v-for-use-on-windows-11/ba-p/3745905) may also help.

#### Problems with Admin Rights

If you are unable to install Docker on your computer (e.g. because you are an apprentice with a corporate laptop), you may wish to try using Podman instead. Podman is runs in 'user space', which means that it does not need admin rights to run. You can find out more about Podman [here](https://podman.io/). Our limited testing suggests that it works well with the SDS environment. 

You will need to:

1. Download and install the Podman CLI and Desktop from [here](https://podman.io/).
2. Run the following command in the PowerShell or Terminal:<br />
`podman machine init`<br />`podman machine start`
1. And then run this command in PowerShell or Terminal to download the SDS image with `podman pull {{< var env.image >}}` (adding `-silicon` for M-chip Macs)

#### Problems with Disk Space

Some Windows PCs (especially those sold with Windows10) have two drives (`C` and `D`) and the `C` drive may fill up very quickly once you start installing and running software or processing data. In that case you may want to store your Docker images on the `D` drive. This is a complex process, and there is a [separate page](../docker/moving_to_d.qmd) to try to talk you through the process. You may need assistance with this.

### Errors Running Docker

You may find that, at some point, Docker begins to complain about not having enough disk space. This is because it is storing all of the images and containers that you have downloaded and run. You can see how much space Docker is using by running the following command in the Power Shell or Terminal:

```bash
docker system df
```

#### Deleting an Image

If you are short on disk space and wish to remove the image and container from your system completely at the end of Term 1 then the following approaches are available:

##### Deleting by Filter

This should be used with some care since it will try to delete all matching images and this may not be what you want:

```bash
docker ps -aqf "name=sds" --format="{{.Image}} {{.Names}} {{.ID}}" | grep "2019" | cut -d' ' -f3 | xargs docker rm -f
docker images --format="{{.Repository}} {{.Tag}} {{.ID}}" | grep "sds" | cut -d' ' -f3 | xargs docker rmi
```

##### Deleting by Image

```bash
docker ps -aq # Get list of running processes and work out container IDs to remove
docker rm -f <list of container IDs>
docker images # Get list of available images and work out image IDs to remove
docker rmi -f <list of image IDs>
```
