# syntax = edrevo/dockerfile-plus
# To make the above work, you need to add 
# `export DOCKER_BUILDKIT=1` (without the back-tics)
# to your .rc (.zshrc/.bashrc) file. This is *only*
# needed when building from source. Otherwise just pull
# as below.

#--- Build from Jupyter-provided Minimal Install ---#
#  export IMG_NM=sds:2024-silicon && docker build --platform linux/arm64 -t jreades/$IMG_NM --compress  -f ./docker/Dockerfile.master .
#  export IMG_NM=sds:2024-intel && docker build --platform linux/amd64 -t jreades/$IMG_NM --compress  -f ./docker/Dockerfile.master .
FROM quay.io/jupyter/minimal-notebook:2024-04-29
LABEL maintainer="Jon Reades <j.reades@ucl.ac.uk>"

ARG TARGETPLATFORM

ENV yaml_nm 'conda.install.yml'
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

#--- Base ---#
USER root
RUN apt-get update \
    && apt-get install -y \
        gcc \ 
        musl-dev \
    && apt-cache policy musl-dev 
# Ideally we could skip the apt-get update
# if we knew where musl-dev is available

#--- Install some fonts ---#
USER $NB_UID
ADD /fonts/*.zip /home/${NB_USER}/
RUN mkdir -p /home/$NB_USER/.local/share/fonts/ \
    && unzip -o '*.zip' \
    && mv *.ttf /home/$NB_USER/.local/share/fonts/ \
    && rm *.zip \
    && chown -R $NB_USER /home/$NB_USER/.local/share/fonts

#--- Quarto ---#
INCLUDE+ ./docker/Dockerfile.quarto

#--- Python ---#
INCLUDE+ ./docker/Dockerfile.python.install

#--- Configure startup params ---#
# Switch back to user to avoid accidental container runs as root
USER $NB_UID

# VSCode Extension Folder (optional usage)
RUN mkdir -p /home/$NB_USER/.vscode-server/extensions \
             /home/$NB_USER/.vscode-server-insiders/extensions \
    && chown -R $NB_UID \ 
             /home/$NB_USER/.vscode-server \
             /home/$NB_USER/.vscode-server-insiders
